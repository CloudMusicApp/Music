{"version":3,"sources":["webpack:///./src/app/containers/user/index.ts","webpack:///./src/app/containers/user/playlists/index.ts","webpack:///./src/app/containers/user/playlists/playlists.component.ts","webpack:///./src/app/containers/user/user-player.service.ts","webpack:///./src/app/containers/user/user.component.ts","webpack:///./src/app/containers/user/user.guard.ts","webpack:///./src/app/containers/user/user.routing.ts","webpack:///./src/app/containers/user/user.scss"],"names":[],"mappings":"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","file":"app-containers-user-index.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/index';\nimport { AppNavbarModule } from '../app-navbar';\n\nimport { PlaylistViewModule } from '../playlist-view'\n\nimport { UserComponent } from './user.component';\nimport { PlaylistsComponent } from './playlists';\n// import { PlaylistViewComponent, PlaylistResolver, PlaylistVideosResolver } from '@shared/components/playlist-view';\n\nimport { AuthGuard } from './user.guard';\nimport { UserPlayerService } from './user-player.service';\nimport { routing } from './user.routing';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AppNavbarModule,\n    PlaylistViewModule,\n    routing\n  ],\n  declarations: [\n    UserComponent,\n    PlaylistsComponent\n  ],\n  exports: [\n    UserComponent\n  ],\n  providers: [\n    AuthGuard,\n    UserPlayerService,\n    // PlaylistResolver,\n    // PlaylistVideosResolver\n  ]\n})\nexport class UserModule { }\n","export * from './playlists.component';\n","import { UserPlayerService } from '../user-player.service';\nimport { EchoesState } from '@core/store';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'playlists',\n  template: `\n  <section class=\"videos-list\">\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\n      <youtube-playlist\n        *ngFor=\"let playlist of playlists$ | async\"\n        [media]=\"playlist\"\n        link=\"/user/\"\n        (play)=\"playSelectedPlaylist(playlist)\"\n        (queue)=\"queueSelectedPlaylist(playlist)\">\n      </youtube-playlist>\n    </div>\n  </section>\n  `\n})\nexport class PlaylistsComponent implements OnInit {\n  playlists$ = this.store.select(state => state.user.playlists);\n\n  constructor(\n    private store: Store<EchoesState>,\n    private userPlayerService: UserPlayerService\n  ) { }\n\n  ngOnInit() { }\n\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userPlayerService.playSelectedPlaylist(playlist);\n  }\n\n  queueSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userPlayerService.queuePlaylist(playlist);\n  }\n}\n","import { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { YoutubePlayerService, NowPlaylistService, UserProfile } from '@core/services';\nimport { EchoesState } from '@core/store';\nimport * as NowPlaylist from '@core/store/now-playlist';\nimport * as AppPlayer from '@core/store/app-player';\n\n@Injectable()\nexport class UserPlayerService {\n  constructor(\n    private nowPlaylistService: NowPlaylistService,\n    private userProfile: UserProfile,\n    private store: Store<EchoesState>\n  ) { }\n\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userProfile\n      .fetchPlaylistItems(playlist.id, '')\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\n        this.nowPlaylistService.updateIndexByMedia(items[0].id);\n        this.store.dispatch(new AppPlayer.LoadAndPlay(items[0]));\n      });\n  }\n\n  queuePlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userProfile\n      .fetchPlaylistItems(playlist.id, '')\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\n        return items;\n      });\n  }\n\n  queueVideo(media: GoogleApiYouTubeVideoResource) {\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\n  }\n\n  playVideo(media: GoogleApiYouTubeVideoResource) {\n    this.store.dispatch(new AppPlayer.LoadAndPlay(media));\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\n    this.store.dispatch(new NowPlaylist.SelectVideo(media));\n  }\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { EchoesState } from '@core/store';\n\nimport * as UserProfile from '@core/store/user-profile/user-profile.selectors';\nimport { AppApi } from '@api/app.api';\n\n@Component({\n  selector: 'app-user',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./user.scss'],\n  template: `\n  <article>\n    <app-navbar\n      [header]=\"'My Profile - My Playlists'\"\n      [headerIcon]=\"'heart-o'\"\n    ></app-navbar>\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\n      To view your playlists in youtube, you need to sign in.\n      <button class=\"btn btn-lg btn-primary\"\n        (click)=\"signInUser()\">\n        <icon name=\"google\"></icon> Sign In\n      </button>\n    </p>\n    <router-outlet></router-outlet>\n  </article>\n  `\n})\nexport class UserComponent implements OnInit {\n  playlists$ = this.store.select(UserProfile.getUserPlaylists);\n  currentPlaylist$ = this.store.select(UserProfile.getUserViewPlaylist);\n  isSignedIn$ = this.store.select(UserProfile.getIsUserSignedIn);\n\n  constructor(private appApi: AppApi, public store: Store<EchoesState>) {}\n\n  ngOnInit() {}\n\n  signInUser() {\n    this.appApi.signinUser();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Authorization } from '@core/services';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private authorization: Authorization, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // console.log('AuthGuard#canActivate called', { state });\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n\n  checkLogin(url: string): boolean {\n    if (this.authorization.isSignIn()) { return true; }\n\n    // Store the attempted URL for redirecting\n    // this.authService.redirectUrl = url;\n\n    // Navigate to the login page with extras\n    this.router.navigate(['/user']);\n    return false;\n  }\n}\n","import { PlaylistVideosResolver } from '@core/resolvers/playlist-videos.resolver';\nimport { PlaylistResolver } from '@core/resolvers/playlist.resolver';\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { UserComponent } from './user.component';\nimport { PlaylistsComponent } from './playlists';\nimport { PlaylistViewComponent } from '../playlist-view/playlist-view.component';\nimport { AuthGuard } from './user.guard';\n\nexport const routing: ModuleWithProviders = RouterModule.forChild([\n  {\n    path: '', component: UserComponent,\n    children: [\n      { path: '', redirectTo: 'playlists', pathMatch: 'full' },\n      { path: 'playlists', component: PlaylistsComponent },\n      {\n        path: 'playlist/:id', component: PlaylistViewComponent,\n        canActivate: [AuthGuard], canActivateChild: [AuthGuard],\n        resolve: {\n          videos: PlaylistVideosResolver,\n          playlist: PlaylistResolver\n        }\n      }\n    ]\n  },\n]);\n","module.exports = \"app-user article {\\n  padding-bottom: 5rem;\\n  padding-top: 7rem; }\\n\\napp-user h2 small {\\n  color: gray; }\\n\\napp-user .youtube-items-container {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: center; }\\n\""],"sourceRoot":""}